Для простоты, это задание напишу на русском:

 

Создайте класс который производит легковые автомобили – они будут нам нужны для класса «таксопарк».

 

Стоимость литра бензина 2,4$, дизеля – 1,8$.

Создайте 100 машин, из которых класс сам будет выпускать каждый третий автомобиль дизельным (остальные, соответственно, бензиновые), стандартный бензобак будет 60 литров, а каждый пятый авто – с баком на 75 литров.

Стоимость машины (сумма расхода на каждую) будет 10.000$. Каждая машина должна иметь тахограф (он считает пройденный километраж), который нельзя сбрасывать/уменьшать.

Максимальный пробег до капремонта бензиновой – 100.000 километров, дизельной – 150.000 км. Пробег без капремонта не может быть превышен – при попытке это сделать машина должна быть сначала отозвана в СТО и проведен капремонт. Его стоимость для бензиновой машины 500$, для дизельной – 700$.

Расход топлива у бензиновой – 8 л/100 км, расход дизеля – 6 л/100 км.

Каждая 1.000 км пробега снижает стоимость бензиновой машины на 9.5$, дизельной – на 10.5$, при этом увеличивая расход топлива на 1% от предыдущего.

Создайте уникальный маршрут случайной длины (import random …) для каждой машины (от 55.000 до 286.000 км). Заправляйте полный бак авто каждый раз, как он опустеет.

 

Машины должны уметь предоставлять сведения о себе:

- пробег

- остаточная стоимость

- сколько было потрачено на топливо за всю поездку

- сколько раз машина заправлялась

- сколько осталось пробега до утилизации (т.е. до момента когда стоимость = 0)

 

После пробега отсортируйте машины: дизельные – по остаточной стоимости, бензиновые – по тому сколько им осталось ездить. Если что, не у всех машин может хватить финансов пройдут маршрут.

Посчитайте суммарную стоимость машин а автопарке после пробега.

 

Ко вторнику, к 18:00 жду от вас красивый рабочий код, пусть и не полный. Лучше писать медленнее но вернее, мы будем его обсуждать, доделывать и оптимизировать еще не одно занятие, но нужно чтобы было что обсуждать, так что постарайтесь.

Используйте пакеты/модули, классы, методы, маханизмы наследования и грамотные конструкторы, выбирайте правильные вспомогательные атрибуты. В общем все то, что проходили.

И помните про масштабируемость, поддерживаемость и вменяемость (не переусложняйте!) – возможно, добавятся новые требования J.


===============================================================================================================

Помимо логики приложений, в них важна еще масштабируемость и гибкость - в идеале изменения в проекте должны затрагивать пару (десятков) строк кода.

·        Дайте возможность заменить двигатель на новый, в случае 100% износа, вместо того чтобы отправить машину в утиль. Стоимость замены пусть будет равна 3000$ для любого типа двигателей, разрешено уводить стоимость машины в минус (ака в кредит, сумма кредитов должны быть подсчитана для всего автопарка, после того как все машины пройдут свое запланированное расстояние).

·        Первые 50.000 км. пробега, машины с бензиновым двигателем должны заправляться АИ92 (2.2$/литр), и только потом – АИ95 (2.4$/литр).

 

Часть статистики по машинам после пробега потеряет смысл, это ок.

 

Не жалейте букв, никаких «магических» чисел или голых стрингов в коде не должно быть – все выносите в константы или записывайте во временные переменные с понятными названиями. Тахограф проверяет новые значения и его точно нелья удалить/отмотать назад?

Проверки isinstance и issubclass будут очень кстати. Используйте assert, чтобы отловить гадкие условия и ситуации.